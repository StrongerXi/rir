# Config file for ReBench
# Config format is YAML (see http://yaml.org/ for detailed spec)

# this run definition will be choosen if no parameters are given to rebench.py
default_experiment: all
default_data_file: 'benchmarks.data'

runs:
    invocations: 10
    warmup: 0
    iterations: 1
    min_iteration_time: 100

.locations:
    rir:  &LOCATION_RIR "%%RIR_VM%%"
    gnur: &LOCATION_GNU "%%GNU_VM%%"
    fastr: &LOCATION_FASTR "%%FASTR_VM%%"
    benchmarks: &LOCATION_BENCHS "%%BENCHMARKS_PATH%%"

.iteration_numbers:
    fast_vm_macro:      &FAST_VM_MACRO      1500
    slow_vm_macro:      &SLOW_VM_MACRO      800
    fast_vm_micro:      &FAST_VM_MICRO      800
    slow_vm_micro:      &SLOW_VM_MICRO      400

# Codespeed Reporting
reporting:
    codespeed:
        project: RIR
        url: http://rflies.rir.o1o.ch/result/add/json/

benchmark_suites:
    are-we-fast-r:
        gauge_adapter: RebenchLog
        location: !join [*LOCATION_BENCHS, "/areWeFast"]
        command: &R_BENCH_COMMAND " harness.r %(benchmark)s %(iterations)s "
        max_invocation_time: 6000
        benchmarks:
            - Mandelbrot:
                extra_args: 750
                codespeed_name: "[awf] mandel"
            - Bounce_nonames_simple:
                extra_args: 2000
                codespeed_name: "[awf] bounce_nn_s"
            - Storage:
                extra_args: 1000
                codespeed_name: "[awf] store"

    shootout:
        gauge_adapter: RebenchLog
        location: !join [*LOCATION_BENCHS, "/shootout"]
        command: *R_BENCH_COMMAND
        max_invocation_time: 6000
        benchmarks:  # extra_args: benchmarkParameter [innerIterations]
            - binarytrees:
                command: binarytrees/binarytrees
                extra_args: 15
                codespeed_name: "[shoot] bintree"
            - fannkuchredux_naive:
                command: fannkuch/fannkuchredux_naive
                extra_args: 10
                codespeed_name: "[shoot] fannk_n"
            - fasta:
                command: fasta/fasta
                extra_args: 1280000
                codespeed_name: "[shoot] fasta"
            - knucleotide_brute_2:
                command: knucleotide/knucleotide_brute_2
                extra_args: 5000
                codespeed_name: "[shoot] knucleo_b2"
            - nbody:
                command: nbody/nbody
                extra_args: 250000
                codespeed_name: "[shoot] nbody"
            - nbody_naive:
                command: nbody/nbody_naive
                extra_args: 200000
                codespeed_name: "[shoot] nbody_n"
            - pidigits:
                command: pidigits/pidigits
                extra_args: 120
                codespeed_name: "[shoot] pidig"
            - spectralnorm:
                command: spectralnorm/spectralnorm
                extra_args: 3000
                codespeed_name: "[shoot] specnorm"
            - spectralnorm_alt:
                command: spectralnorm/spectralnorm_alt
                extra_args: 8000
                codespeed_name: "[shoot] specnorm_a"

    real_thing:
        gauge_adapter: RebenchLog
        location: !join [*LOCATION_BENCHS, "/RealThing"]
        command: *R_BENCH_COMMAND
        max_invocation_time: 6000
        benchmarks:  # extra_args: benchmarkParameter [innerIterations]
            - convolution:
                command: convolution
                extra_args: 1200
                codespeed_name: "[RealThing] convolution"
            - flexclust_no_s4:
                command: flexclust_no_s4
                extra_args: 15
                codespeed_name: "[RealThing] flexclust_no_s4"


# VMs have a name and are specified by a path and the binary to be executed
executors:
# Standard configurations 
    GNU-R:
        path: *LOCATION_GNU
        executable: &R_VM_CMD "bin/Rscript"
        args: ""
        environment: "R_ENABLE_JIT=3"
    RIR:
        path: *LOCATION_RIR
        executable: *R_VM_CMD
        args: ""
        environment: "RIR_PROFILING=off PIR_ENABLE=off R_ENABLE_JIT=3"
    PIR:
        path: *LOCATION_RIR
        executable: *R_VM_CMD
        args: ""
        environment: "R_ENABLE_JIT=3"
    PIR-NATIVE:
        path: *LOCATION_RIR
        executable: *R_VM_CMD
        args: ""
        environment: "R_ENABLE_JIT=3 PIR_NATIVE_BACKEND=1"
    PIR-LLVM:
        path: *LOCATION_RIR
        executable: *R_VM_CMD
        args: ""
        environment: "R_ENABLE_JIT=3 PIR_NATIVE_BACKEND=2"
    FASTR:
        path: *LOCATION_FASTR
        executable: *R_VM_CMD
        args: ""
        environment: ""
# Extra configurations for measuring special data
# Contextual Dispatching
    PIR-LLVM-NOENVSPEC:
        path: *LOCATION_RIR
        executable: *R_VM_CMD
        args: ""
        environment: "R_ENABLE_JIT=3 PIR_NATIVE_BACKEND=2 PIR_PASS_BLACKLIST=\"ElideEnvSpec.*\""
    PIR-LLVM-NOTYPESPEC:
        path: *LOCATION_RIR
        executable: *R_VM_CMD
        args: ""
        environment: "R_ENABLE_JIT=3 PIR_NATIVE_BACKEND=2 PIR_PASS_BLACKLIST=\"TypeSpeculation.*\""
    PIR-LLVM-NOSPECULATION:
        path: *LOCATION_RIR
        executable: *R_VM_CMD
        args: ""
        environment: "R_ENABLE_JIT=3 PIR_NATIVE_BACKEND=2 PIR_PASS_BLACKLIST=\"ElideEnvSpec.*|TypeSpeculation.*\""


# define the benchmarks to be executed for a re-executable benchmark run
experiments:
    AreWeFast:
        executions:
          - PIR-LLVM:
              suites:
                - are-we-fast-r
                - shootout
                - real_thing
